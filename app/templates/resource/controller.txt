<?php

class [model]Controller extends \BaseController {

	// data only
	public function getAll[Models](){
		return [Model]::all();
	}

	/**
	 * Display a listing of [models]
	 *
	 * @return Response
	 */
	public function index()
	{
		$[models] = [Model]::all();

		return View::make('[model].index', compact('[models]'));
	}

	/**
	 * Show the form for creating a new [model]
	 *
	 * @return Response
	 */
	public function create()
	{
		return View::make('[model].create');
	}

	/**
	 * Store a newly created [model] in storage.
	 *
	 * @return Response
	 */
	public function store()
	{
		$validator = Validator::make($data = Input::all(), [Model]::$rules);

		if ($validator->fails())
		{
			return Redirect::back()->withErrors($validator)->withInput();
		}

		[Model]::create($data);

		return Redirect::route('[model].index')->with('message', '[Model] created.');
	}

	/**
	 * Display the specified [model].
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($id)
	{
		$[model] = [Model]::findOrFail($id);

		return View::make('[model].show', compact('[model]'));
	}

	/**
	 * Show the form for editing the specified [model].
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
		$[model] = [Model]::find($id);

		return View::make('[model].edit', compact('[model]'));
	}

	/**
	 * Update the specified [model] in storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update($id)
	{
		$[model] = [Model]::findOrFail($id);

		$validator = Validator::make($data = Input::all(), [Model]::$rules);

		if ($validator->fails())
		{
			return Redirect::back()->withErrors($validator)->withInput();
		}

		$[model]->update($data);

		return Redirect::route('[models].index')->with('message', '[Model] updated.');
	}

	/**
	 * Remove the specified [model] from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
		[Model]::destroy($id);

		return Redirect::route('[model].index')->with('message', '[Model] deleted.');
	}
	
	/**
	 * Remove [models].
	 */
	public function delete()
	{
		foreach (Input::get('ids') as $id) {
			[Model]::destroy($id);
		}
		if (count(Input::get('ids')) > 1) {
			return Redirect::route('product.index')->with('message', '[Models] deleted.');
		}
		else {
			return Redirect::route('product.index')->with('message', '[Model] deleted.');
		}
	}
	
	/**
	 * Diable [models].
	 */
	public function disable()
	{
		foreach (Input::get('ids') as $id) {
			[Model]::find($id)->update(['disabled' => 1]);	
		}
		if (count(Input::get('ids')) > 1) {
			return Redirect::route('product.index')->with('message', '[Models] disabled.');
		}
		else {
			return Redirect::route('product.show', $ids[0])->with('message', '[Model] disabled.');
		}
	}
	
	/**
	 * Enable [models].
	 */
	public function enable()
	{
		foreach (Input::get('ids') as $id) {
			[Model]::find($id)->update(['disabled' => 0]);	
		}
		if (count(Input::get('ids')) > 1) {
			return Redirect::route('product.index')->with('message', '[Models] enabled.');
		}
		else {
			return Redirect::route('product.show', $ids[0])->with('message', '[Model] enabled.');
		}
	}

}